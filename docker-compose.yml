services:
  api_gateway:
    build:
      context: ./
      dockerfile: ./apps/managment-api/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    command: npm run start:dev management-api
  users:
    build:
      context: ./
      dockerfile: ./apps/users/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev users
  projects:
    build:
      context: ./
      dockerfile: ./apps/projects/Dockerfile
    ports:
      - '3003:3003'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev projects
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    ports:
      - '3002:3002'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
      # - 'rabbitmq_data:/data'
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '5050:80'
    
  redis:
    image: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data