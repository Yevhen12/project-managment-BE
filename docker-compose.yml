services:
  api_gateway:
    build:
      context: ./
      dockerfile: ./apps/managment-api/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    command: npm run start:dev management-api
  users:
    build:
      context: ./
      dockerfile: ./apps/users/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev users
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
      # - 'rabbitmq_data:/data'
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '5050:80'
# volumes:
#   rabbitmq_data:
  # users_microservice:
  #   build: ./users-microservice
  #   volumes:
  #     - ./users-microservice/src:/usr/src/app/src
  #   command: npm run start:dev
  #   depends_on:
  #     - rabbitmq
  # projects_microservice:
  #   build: ./projects-microservice
  #   volumes:
  #     - ./projects-microservice/src:/usr/src/app/src
  #   command: npm run start:dev
  #   depends_on:
  #     - rabbitmq
#   rabbitmq:
#     image: "rabbitmq:3-management"
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     volumes:
#       - 'rabbitmq_data:/data'
# volumes:
#   rabbitmq_data:
  # mysql_db:
  #   image: mysql
  #   ports:
  #     - "3307:3307"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root_password_123
  #     - MYSQL_DATABASE=nestjs_db
  #     - MYSQL_USER=testuser
  #     - MYSQL_PASSWORD=testuser123
  #     - MYSQL_TCP_PORT=3307